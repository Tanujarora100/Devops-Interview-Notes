apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: my-grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.33.0
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-pv
          mountPath: /prometheus
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "550M"
            cpu: "250m"
        readinessProbe:
          httpGet:
            path: /ready
            port: 9090
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthy
            port: 9090
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
      securityContext:
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        allowPrivilegeEscalation: false
        capabilities:
          drop: ["ALL"]
      volumes:
      - name: prometheus-pv
        persistentVolumeClaim:
          claimName: prometheus-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
    name: http
    nodePort: 30015
  type: NodePort
---
