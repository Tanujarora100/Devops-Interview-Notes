apiVersion: v1
kind: Namespace
metadata:
  name: production
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: s3-access-sa
  namespace: production
  annotations:
    amazonaws.com/role-arn: arn:aws:iam::992382476319:role/s3-read-policy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-deployment
    tier: production
  name: my-deployment
  namespace: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-deployment
      tier: production
  template:
    metadata:
      labels:
        app: my-deployment
        tier: production
    spec:
      serviceAccountName: s3-access-sa
      volumeMounts:
      - name: aws-cli-mount-volume
        mountPath: /root/.aws/

      containers:
      - image: nginx:latest
        name: nginx-container
        resources:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "250m"
            memory: "512m"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: aws-cli-mount-volume
          mountPath: /root/.aws/
        securityContext:
          privileged: false
          runAsUser: 1000
          runAsGroup: 1000
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 5

      volumes:
      - name: aws-cli-mount-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: my-app-service
  namespace: production
spec:
  selector:
    app: my-deployment
    tier: production
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
