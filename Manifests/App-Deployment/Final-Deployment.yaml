
apiVersion: v1
kind: Namespace
metadata:
  name: app-deployment
---
apiVersion: v1
kind: Service
metadata:
  name: my-app
  namespace: app-deployment
spec:
  selector:
    app: my-app
  type: LoadBalancer
  sessionAffinity: None
  ports:
  - name: my-app
    protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 31000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  namespace: app-deployment
  labels:
    app: my-app
spec:
  selector:
    matchLabels:
      app: my-app
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: my-app
    spec:
      initContainers:
      - name: git-checkout
        image: alpine/git:latest
        command:
        - sh
        - -c
        - |
          git clone <YOUR_GIT_REPOSITORY_URL> /src
        volumeMounts:
        - name: app-source
          mountPath: /src
      containers:
      - name: nginx-app
        image: nginx:latest
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        ports:
        - containerPort: 80
          name: myapp
        volumeMounts:
        - name: app-deployment-volume
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: app-deployment-volume
        hostPath:
          path: /Users/tanujarora/Downloads
      restartPolicy: Always
